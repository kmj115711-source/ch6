# 더하기 함수 만들기
# 함수 정의
# def 함수 이름(매개변수): ...
# 매개변수 : 함수에 필요한 입력 값( 예를 들어 숫자 2개)
# 반환값(return) : 결과 
# 디버깅 함수 내부 : f11
def add(a, b):
    return a + b   #반환값

# 함수 사용
sum = add(3, 4)    # 함수 이름(입력값)
print("결과:",sum)  #결과 : 7


# 함수의 여러가지 형태
#인사를 출력하는 함수 만들기
# 입력값 없고, 반환값도 없는 함수
def hello():
    print('안녕하세요')
# 함수 호출
hello()

# 입력값도 있고, 리턴값도 있는 함수
# 두 수를 더하는 함수
def add (a, b):
    return a + b
# 함수를 호출할 때, 두 숫자를 입력하고
# 호출이 끝난 후에, 결과를 받아야함
result = add(3, 4)


# 함수의 형태에 따라 호출하는 방법 알기
# 입력 값 없고, 리턴값만 있는 함수
# 인사를 반환하는 함수
def say():
    return 'hi'
# 리턴값이 있으면 결과를 받아야함
string = say()
print(string)  #'hi'


# 입력 값 있고, 반환 값은 없는 함수
# 두 수를 더하고 결과를 바로 출력하는 함수
# a, b = 매개 변수, 입력 값, 인자
def add(a , b):
    print(a + b)

# 매개변수가 있으면 갯수에 맞게 입력 
# 함수를 호출할때는 3과 4를 '인자' 라고 부른다
add(3, 4) #7

# 함수 응용하기
# 입력한 수자만큼 '안녕하세요' 출력하기
def hello(cnt):
    # 3번 출력하기, 반복 횟수는 range에 입력
    for _ in range(cnt):
     print('안녕하세요')

# 매개변수가 있으면 입력값을 넣어서 함수 호출
hello(5)


# 블록을 가지는 것 : 함수, if, for
# 블록은 들여쓰기로 구분 : space x tab o
# 블록은 변수의 scope

# a = 10  # 전역 변수

# if a%2 == 0:
#     b = 5   # 지역 변수
#     print( b)

# print(a)

# for n in range(10):
#     print(n) #지역 변수

# def fun(x, y): 
#         print(x, y)    # 지역 변수

# fun(2, 3)
# # print(x, y) 
#함수 블록 안에서 선언된 x,y는 지역변수로
# 함수 밖에서는 사용할 수 없다